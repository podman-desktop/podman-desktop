import{n as m,s as v,p as h,f as g,a as b,b as o,c,d as I,t as C,e as x,g as w,h as y}from"./iframe-BUV4bfn0.js";import{c as R,i as q,d as V}from"./create-runtime-stories-C_bZBeoP.js";import"./ErrorMessage-D6L2IfS-.js";import"./Button-DIC_Zb-J.js";import{I as u}from"./Table-DJx8UK5P.js";import"./LinearProgress-DQDS0FT7.js";import"./Spinner-C09zerqp.js";import"./EmptyScreen-DkhOlNsf.js";import"./Icon-C2Zbi6fe.js";import"./attributes-D9FMWWlH.js";import"./index-D6iXELdJ.js";import"./StarIcon-D_0aYjiZ.js";import"./index-DtmeDzJ6.js";const B=(l,a,i=m)=>{let r=()=>w(a==null?void 0:a(),["_children"]);u(l,v(r,{children:(n,d)=>{var s=C();x(()=>y(s,r().content)),c(n,s)},$$slots:{default:!0}}))},E={component:u,render:B,title:"Input/Input",tags:["autodocs"],argTypes:{placeholder:{control:"text",description:"placeholder text to show if input field is empty",defaultValue:""},value:{control:"text",description:"initial value",defaultValue:""},disabled:{control:"boolean",description:"Flag the input as being disabled",defaultValue:!1},readonly:{control:"boolean",description:"if true, the input field cannot be edited",defaultValue:!1},required:{control:"boolean",description:"if true, the input field is required",defaultValue:!1},clearable:{control:"boolean",description:"if true, the input field can be cleared with an icon",defaultValue:!1},error:{control:"text",description:"error message to show if input is invalid",defaultValue:""}},parameters:{docs:{description:{component:"These are the stories for the `Input` component.\nIt's the component used to get text/input from the user."}}}},{Story:e}=V();var D=g("<!> <!> <!> <!> <!> <!>",1);function f(l,a){h(a,!1),q();var i=D(),r=b(i);e(r,{name:"Basic",args:{placeholder:"Basic input with a default value",value:"Value predefined"},parameters:{__svelteCsf:{rawCode:"<Input {...args}>{args.content}</Input>"}}});var n=o(r,2);e(n,{name:"Readonly",args:{readonly:!0,placeholder:"readonly cannot edit the input field"},parameters:{__svelteCsf:{rawCode:"<Input {...args}>{args.content}</Input>"}}});var d=o(n,2);e(d,{name:"Required",args:{required:!0,placeholder:"example of required field"},parameters:{__svelteCsf:{rawCode:"<Input {...args}>{args.content}</Input>"}}});var s=o(d,2);e(s,{name:"Clearable",args:{clearable:!0,placeholder:"the input field can be cleared with an icon"},parameters:{__svelteCsf:{rawCode:"<Input {...args}>{args.content}</Input>"}}});var p=o(s,2);e(p,{name:"Disabled",args:{disabled:!0,placeholder:"the input field is disabled"},parameters:{__svelteCsf:{rawCode:"<Input {...args}>{args.content}</Input>"}}});var _=o(p,2);e(_,{name:"Error",args:{placeholder:"Input has an error",error:"this input is being invalid"},parameters:{__svelteCsf:{rawCode:"<Input {...args}>{args.content}</Input>"}}}),c(l,i),I()}f.__docgen={data:[],name:"Input.stories.svelte"};const t=R(f,E),J=["Basic","Readonly","Required","Clearable","Disabled","Error"],K={...t.Basic,tags:["svelte-csf-v5"]},L={...t.Readonly,tags:["svelte-csf-v5"]},N={...t.Required,tags:["svelte-csf-v5"]},Q={...t.Clearable,tags:["svelte-csf-v5"]},U={...t.Disabled,tags:["svelte-csf-v5"]},W={...t.Error,tags:["svelte-csf-v5"]};export{K as Basic,Q as Clearable,U as Disabled,W as Error,L as Readonly,N as Required,J as __namedExportsOrder,E as default};
